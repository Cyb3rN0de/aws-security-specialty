AWSTemplateFormatVersion: '2010-09-09'

Description: Template to create an ec2 instance with httpd ready and download web-server contents from a versioned s3 bucket of choice

Mappings: 
  RegionMap: 
    ap-southeast-1: 
      "HVM64": "ami-07f179dc333499419"
    ap-southeast-2: 
      "HVM64": "ami-0c635ee4f691a2310"
    ap-southeast-3: 
      "HVM64": "ami-026f5d12b2bc13847"
    us-east-1: 
      "HVM64": "ami-0a8b4cd432b1c3063"
    eu-west-2: 
      "HVM64": "ami-055c6079e3f65e9ac"

Parameters:
  KeyName:
    Description: Name of SSH KeyPair
    Type: AWS::EC2::KeyPair::KeyName
  SubnetId:
    Description: Public subnet in which to launch an EC2
    Type: String
  InstanceType:
    Description: Choose instance type
    Type: String
    Default: t3.micro
    AllowedValues:
    - t2.micro
    - t3.micro
  SpecificBucket:
    Description: Versioned bucket with latest website content (bucket name only, no ARN)
    Type: String
    
Resources:
  myEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      InstanceType: !Ref InstanceType
      Monitoring: 'true'
      KeyName: !Ref KeyName
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !GetAtt InstanceSecurityGroup.GroupId
      IamInstanceProfile: !Ref myInstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y #install all updates
          yum install httpd -y #install Apache web server
          systemctl start httpd #start the Apache web server
          systemctl enable httpd #enable httpd auto-start after reboot
          sudo aws s3 cp s3://${SpecificBucket}/ /var/www/html/ --recursive #copy website on server
      Tags:
        - Key: Name
          Value: my-server
  MyEC2toS3role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/" 
  RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: mys3role
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: s3:*
            Resource: '*'
      Roles:
        - !Ref MyEC2toS3role
  myInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref MyEC2toS3role
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Web-DMZ
      GroupDescription: Public access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: my-sg

Outputs:
  InstanceID:
    Description: WebServer Instance ID
    Value: !Ref myEC2Instance
  PublicIp:
    Description: WebServer Public IP
    Value: !GetAtt myEC2Instance.PublicIp
  Region:
    Description: Region
    Value: !Ref "AWS::Region"